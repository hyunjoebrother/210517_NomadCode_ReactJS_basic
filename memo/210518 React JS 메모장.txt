210518 React JS - 영화 웹 서비스 만들기 start

-> 멍냥 Web & 인하여우비 App project 기릿

Ch0-3 : Why React

- 많이 씀,,,
- 정보, 커뮤가 많음 == 구글링 편하다는 뜻
- 취업취업


Ch1-0 : Creating your first React App

- node.js, npm, npx 다운하자
해당 폴더로 가서
$npx create-react-app movie_app (폴더이름)
-> 폴더 생성 완료
-> 생성 폴더로 가서 
$yarn start 아니면 VSC에서 직접 폴더 열기
-> Readme.md 내용 지우고 설명 작성

* pakage.json 안에 명령어가 있음 
-> "scripts"에서 start, build 만 남기고 지우자 (필요없음)

* yarn.lock 파일 삭제 (uarn은 npm)

이제 터미널에서 첫번째 application을 실행하자
$npm start
-> 개발 서버가 실행
-> browser에서도 볼 수 있고 wi-fi 폰 테스트할 때 url 가능


Ch1-1 : Creating a Github Repository

$git init
$git remote add origin 주소
$git add .
$git commit -m " "
$git push origin master


Ch1-2 : How does React work?

폴더 3개임 
public & src만 건들거임

src폴더에 뭔가 많음
하지만 기초 설명을 위해 파일이랑 코드 좀 지울 거임
[index.js]
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(<App />,document.getElementById('root'));

-> App.js랑 index.js 빼고 파일 다 지우자 + 여기도 코드 삭제
[App.js]
import React from "react";

function App() {
  return <div className="App" />;
}

export default App;


이제 서버 동작한 거 보면 아무것도 없음!
-> browser에 자동으로 바로 refresh된다
function App() {
  return <div>Hello, React!</div>
}
하지만 public폴더 index.html에 가면 
<div id = "root"></div> 비어있음
하지만 내 lovalhost에는 내부에 있음?!?!

-> React란,
당신이 거기에 쓰는 모든 요소를 생성하겠다
JS로 element를 넣으면서 그걸 만들고 -> HTML로 밀어넣음
app.js의 Component를 ElementById에 넣으려고 한다
-> React 동작 ON

-> 소스코드 처음부터 HTML 넣지 않아서
apllication이 이것을 실행할 때, 
빈 HTML을 로드하고 -> 그 다음에 React가 HTML을 밀어넣음

* virtual DOM : 소스코드에 존재하지 않음! -> 작업이 빠름
-> react가 만들어낸다


Ch2-0 : Creating your first React Component

app.js에 보이는 <App />
-> Component라고 부른다
-> 우리는 직접 보기 좋게 component를 만들고 data를 보여주게 할 거임
component : HTML을 반환하는 함수.
우리는 function, application을 가지고 있고, 이것은 html을 반환할 거임

이렇게 js랑 html 조합을 'JSX'라고 부름. (React에서 유일한 개념)
js 안의 HTML

## 이제 Component를 만들어보자!!! ##

src폴더 안에 potato.js 새 파일 생성

import React from "react";
-> React는 여기에 jsx가 있는 component 사용하는걸 이해하도록

다음에 Component 이름의 함수 작성
함수로 선언 후에 export하여 Potato를 사용하자
export default Potato

이제 index.js에서 import하자
React application은 '하나'의 component만을 rendering 해야해서
App따로 Potato 따로 해야함
-> index.js 말고 App.js에 Potato를 import 해보자
<h1>Hello, React!</h1>
      <Potato />

완성!!!

-> 소스코드 보면 React는 Component를 가져와서
Browser가 이해할 수 있는 평범한 일반 HTML로 만들었음 굿굿

이제 모든 것들은 App.js application 안에 작업해야함
-> Component를 계속 만들 수 있다!!


Ch2-1 : Reusable Components with JSX + Props





# JavaScript : 웹에 쓰이는 하나뿐인 언어
# Vanilla JS : 아무것도(library, framework) 없는 js, 브라우저를 통해 제공 


210302 Ch1-6 : Variable 변수

$console.log() : 실행
*변수를 생성해보자
Create -> Initialize -> Use
let a = 17; -> let b = a - 5; -> console.log(b);

210304 Ch1-7 : let, const, var

const : 상수, stable, 변하지 않음, 재선언 금지, 재할당 금지
let : 값 변경 허용, 재선언 금지, 재할당 가능
var : variable 값 변경 허용, 재선언 가능, 재할당 가능

* 변수 첫 사용은 const로 하자
* "..." 는 text 취급, string
* bool -> true/false : text 아님
* float : 소숫점

## Organizing Data by Array & Object





